type User {
    id: ID!
    username: String!
    fullname: String!
}

type Product {
    id: ID!
    productSku: String!
    productName: String!
    productPrice: Float!
    active: Boolean!
}

type Order {
    id: ID!
    user: User!
    products: [Product]!
}

input ProductSkuInput {
    sku: String!
}

type Query {
   allUsers: [User]
   findUser(username: String!): User

   allProducts: [Product]
   findProduct(sku: String!): Product

   allOrders: [Order]
   findOrder(id: Int!): Order
}

type Mutation {
    createUser(username: String!, fullname: String!) : User
    updateUser(username: String!, fullname: String!) : User
    deleteUser(username: String!) : Boolean

    createProduct(sku: String!, name: String!, price: Float!) : Product
    updateProduct(sku: String!, name: String!, price: Float!) : Product
    activateProduct(sku: String!) : Boolean
    deactivateProduct(sku: String!) : Boolean

    createOrder(username: String!, skus: [ ProductSkuInput ]) : Order
}

schema {
   query: Query
}